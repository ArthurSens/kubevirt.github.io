---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kubevirt.io: virt-controller
  name: virt-controller
  namespace: 
spec:
  replicas: 2
  selector:
    matchLabels:
      kubevirt.io: virt-controller
  strategy: {}
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        kubevirt.io: virt-controller
        prometheus.kubevirt.io: ""
      name: virt-controller
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: kubevirt.io
                  operator: In
                  values:
                  - virt-controller
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - command:
        - virt-controller
        - --launcher-image
        - /virt-launcher@:
        - --port
        - "8443"
        - -v
        - 
        image: /virt-controller@:
        imagePullPolicy: 
        livenessProbe:
          failureThreshold: 8
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 15
          timeoutSeconds: 10
        name: virt-controller
        ports:
        - containerPort: 8443
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /leader
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 15
          timeoutSeconds: 10
        resources: {}
      priorityClassName: kubevirt-cluster-critical
      securityContext:
        runAsNonRoot: true
      serviceAccountName: kubevirt-controller
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
